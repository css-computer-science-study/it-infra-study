6장
1)tcp,udp차이에 대해 설명해 주세요
tcp와 udp는 전송계층 프로토콜이라는 공통점이이있습니다. 
tcp는 핸드쉐이킹을 사용해 전송이 되었는 지 확인하고 연결하는 신뢰성 있는 프로토콜입니다. 
http.ftp의 프로토콜등에서 사용됩니다. 오류제어 흐름제어 혼잡제어를 제공합니다.
udp는 전송이 되었는지 확인않고 보내는 비신뢰적인 프로토콜입니다. 신뢰성은 적지만 tcp보다 빠르게 전송이 됩니다.
패리티 검사를 진행하며 빠르게 전송되기 때문에 dns서버나 실시간 동영상 스트리밍에 사용됩니다. 

2) 오류제어 흐름제어 혼잡제어에 대해 설명해 주세요 
https://benlee73.tistory.com/186

- 흐름 제어
전송되는 데이터의 속도, 송신 측과 수신 측의 데이터 처리 속도 조절 , 송신 측이 빠를 때 수신 측 버퍼가 넘치는 오버플로우 문제가 발생
윈도우 크기 (ㄷ이터를 한번에 보내는양) 을 조절하여 제어

- 오류 제어
TCP는 통신 중에 오류가 발생하면 해당 데이터를 재전송하는 방법
에러가 난 경우 중복된 ACK를 받아 수신 측이 NACK(부정응답)을 보내 재전송

- 혼잡 제어
패킷의 수 제어 방법, 네트워크 내에 패킷의 수가 과도하게 증가하는 현상을 혼잡이라고 험.
흐름 제어는 송신 측과 수신 측의 전송 속도를 다루고, 혼잡 제어는 라우터를 포함한 보다 넓은 범위의 전송 문제를 다룸

3)http와 소켓통신에 대해 비교해주세요
https://kotlinworld.com/75
HTTP는 소켓통신중 일부입니다. 하지만 소켓통신이 HTTP 통신은 아닙니다 .IP와 포트 번호를 사용하는 tcp위에 HTTP가 있어 같은 소켓방식을 이용하기 때문
이둘을 구분하는 이유는 한쪽에서만 요청에 대한 응답 웹통신에서 http가 중요하게 여겨지기 때문입니다
HTTP란 HTML 파일을 전송하는 프로토콜이라는 의미로 현재는 JSON, Image 파일 등 또한 전송됩니다. 클라이언트의 요청이 있을 때 만 서버가 응답하는 단방향 통신입니다. 
서버에 응답 코드가 같이 전송되어 이 응답코드롸 함께 메세지를 응답받습니다.
- 응답을 받은 후 Connection이 끊어지는 것이 기본 동작이지만, 성능 상으로 필요하다면 Keep Alive 옵션을 주어 일정 시간 동안 Connection을 유지하는 것이 가능
 
소켓은 IP와 Port number을 사용해 만들어진 통신의 양 끝단을 의미 합니다. 이는 두개의 프로그램이 서로 데이터를 주고 받을 수 양쪽에 생성되는 통신 단자로 사용됩니다. 
소켓 통신은 HTTP와 달리 서버와 클라이언트 양방향 연결이 이루어지는 통신입니다.실시간으로 데이터를 주고 받아야 하는 경우 연결을 끊었다가 받는 HTTP 통신보다 소켓 통신이 적합해 자주 사용합니다. 
 
4)핸드쉐이킹에 대해 좀더 자세히설명해주세요
출처: https://mindnet.tistory.com/entry/네트워크-쉽게-이해하기-22편-TCP-3-WayHandshake-4-WayHandshake [Mind Net:티스토리]

TCP가 연결을 생성하고 종료하는 방법입니다. TCP 연결과정에서 LISTEN - accept - r/w - CLOSED 함수를 사용하는데 이 과정에서 세션을 수립합니다. 양쪽 모두 데이타를 전송할 준비가 되었다는 것을 보장하고, 받는쪽이 전달받기전 전송받을 준비가 되었다는 것을 보장합니다. 
연결을 생성할 때는 3번 통신과정을 거쳐 3 Way Handshake라고 합니다. 
Client > Server : TCP SYN(순서 번호 동기화)
Server > Client : TCP SYN ACK
Client > Server : TCP ACK(인식함)
연결을 생성할때는 4 Way Handshake라고 합니다. 
연결이 잘되어 있는지 , 아직 다 처리하지 못한 데이터가 있는지 확인합니다 .

Client > Server : TCP FIN
Server > Client : TCP ACK ( TIME_WAIT상태 : 서버가 나 끝났는지 확인중이라고 하는 상태 )
Server > Client : TCP FIN 
Client > Server : TCP ACK

5)HTTP와 HTTPS의 차이점은 무엇인가요?
HTTP는 평문 데이터를 전송하는 프로토콜이기 때문에,제 3자에 의해 조회될 수 있습니다. HTTP에 암호화가 추가된 프로토콜이 HTTPS입니다.
SSL(Secure Socket Layer): 인터넷을 통해 전달되는 정보를 보호하기 위해 개발한 통신 규약
HTTP는 원래 TCP와 직접 통신했지만, HTTPS에서 HTTP는 SSL과 통신하고 SSL이 TCP와 통신함으로써 암호화와 증명서, 안전성 보호를 이용할 수 있게 됩니다.
