다음 개념을 설명하고 비교하시오. 그럼 이 개념이 쓰이는 곳은 어디인가요?(! 느낌표는 그냥 제가 모르는 거 표시한 겁니다!)

1.큐 vs 스택(nit, ge 기출)
큐는 선입선출 구조로 데이터가 들어오는 순서대로 쓰입니다. bfs 구현에 쓰이며 병렬처리 같이 동시에 여러 개가 작동 되어야할때 주로 사용됩니다. 
또, 큐는 아래와 같은 경우에서 사용합니다. 
    1)하드디스크 입출력을 담당하는 i/o 행렬, 
    2)cpu가 처리하는 프로세스나 쓰레드가 담겨있는 대기행렬(런큐)
     - 대기행렬이 지연상태라고 보는 기준: 대기행렬안의 프로세스 수 / cpu 개수 > 1
     - 리눅스는 실행 중인 프로세스 수 도 대기행렬안의 프로세스 수에 포함한다. 
     - 이런 대기 행렬을 관리는 누가? : 커널의 프로세스 스케쥴러가 
    3)!네트워크 접속 요구를 해결하는 행렬
    4)!데이터 베이스의 디스크 처리 i/o행렬
스택은 바구니 모양의 선입 후출 구조로 먼저 들어오는 데이터가 나중에 쓰입니다. 스택은 주로 dfs구현 시 쓰입니다.

2.동기 vs 비동기(nit, ge 기출)
동기: 끝날때까지 기다리기/ 대기시간이 있지만 끝났는지 확실히 알 수 있음
비동기: 끝남을 알려줄때까지 다른일 하기(병렬처리와 관련)/ 다른일 할수 있지만 끝남을 알릴수 있는 다른 처리가 필요해 구현이 복잡함
    -  ajax: 화면 일부 수정시 새로 고침할때 까지 기다리는 게 아니라 입력 도중인 일부만 처리할 수 있다. 
    -  dbms의 입출력: 대용량의 하드디스크 데이터를 입출력할때 , 이를 기다리지 않고 다음 요청을 입출력 명령에 입력한 후 , 대용량 입력이 끝나면 이를 실행한다. 

3.가변길이 vs 고정길이(nit 기출)
세그먼트와 페이징 : 세그먼트는 가변길이 페이징은 고정길이 -> 단편화 연결(?)
가변길이:공간 활용 자유도 높음/ 데이터 편중 높음, 탐색에 오랜시간 걸림, 외부 단편화 - tcp/ip 패킷 처리
고정길이:탐색과 성능에서 안정적/ 남는공간 발생 높음, 내부 단편화 - 디스크의 파일 저장

4.교착상태에 대한 설명과 교착상태가 일어나기 위한 조건, 그리고 배타적 제어에 대해 더 설명하시오(nit 기출)
교착상태는 운영체제가 프로세스를 작동시킬수 없는 상태로, 일어나기위한 4가지 조건이 있습니다. 
    1)상호배제(Mutual exclusion) : 프로세스들이 필요로 하는 자원에 대해 배타적인 통제권을 요구한다.
    2)점유대기(Hold and wait) : 프로세스가 할당된 자원을 가진 상태에서 다른 자원을 기다린다.
    3)!비선점(No preemption) : 프로세스가 어떤 자원의 사용을 끝낼 때까지 그 자원을 뺏을 수 없다.
    4)순환대기(Circular wait) : 각 프로세스는 순환적으로 다음 프로세스가 요구하는 자원을 가지고 있다.
배타적 제어는 한번 데이터접근에 하나의 프로세스만 접근할 수 있도록 하는 것으로 병렬 처리와 같은 여러개의 작업이 데이터를 공유할 때 필요합니다. 
배타적 제어는 공유데이터의 일관성을 유지할수 있으나 병렬처리가 되지않습니다. 필요한 곳에만 배타적 제어를 적용해 cpu 활용도를 높여야합니다. 

5.상태저장 vs 상태비저장
과거의 상태를 현재에 다시 사용하는 것:상태 저장, 복잡한 처리 가능하지만 시스텝 복잡성이 커짐
    1) 프로세스 처리
    2) http 프로토콜의 세션
과거 고려하지 않고 매번 신규요청이 생성되는 것: 상태 비저장, 단순하지만 복잡한 처리 어려움
    1) 일반적인 http 통신
